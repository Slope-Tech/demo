"use strict";(self.heliuxModules=self.heliuxModules||[]).push([[9397],{11896:(t,e,r)=>{r.d(e,{f:()=>u});var n=r(54705),s=r(16045),i=r(63645);function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function h(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){(0,n.A)(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}class u extends s.${constructor(t){const e=u.setAuth(t);super(h(h({},t),e)),this.maxRetries=t.maxRetries??2,this.retryOnStatuses=t.retryOn||[401,403],this.__updateToken().then((()=>this.logger.info("Token updates done.")))}get name(){return"FetchSDK"}static setAuth(t={}){const e=(0,i.y7)();if(!e)return{};const{auth:r}=t;return h({},!r&&e.token&&{auth:e.token})}get CIAM(){return(0,i.y7)()}isUserLoggedIn(){return this.CIAM&&this.CIAM.signedIn}async __updateToken(){const t=await(0,i.t6)();if(!t)return null;if(!t.isReady)return this.CIAM.onReady(12e4).then((()=>this.__getCachedToken())).then((t=>this.__validateToken({token:t}))),null;const e=await this.__getCachedToken();return this.__validateToken({token:e})}__getCachedToken(){return this.CIAM&&this.CIAM.isInit?this.CIAM.getCachedToken():null}async __getRefreshedToken(){return await(0,i.t6)()?this.CIAM.getRefreshedToken():null}async __getToken(){const t=this.auth?this.auth.token:null;return t?super.__getToken(t):this.__getCachedToken()}retryOn({status:t}={}){return!!t&&this.retryOnStatuses.includes(t)}__updateAuthOptions(t,e={}){if(!t)return e;const r=e.headers||{},n=(r.Authorization||"").split(" "),s=2===n.length?n[0]:"Bearer";return h(h({},e),{},{headers:h(h({},r),{},{Authorization:`${s} ${t}`})})}async __refreshAuthOptions(t){const e=await this.__getRefreshedToken();return this.__updateAuthOptions(e,t)}async __fetchRetry(t,e,r=0){let n,s;try{n=await fetch(t,e)}catch(t){s=t,this.logger.error("Fetch error, count:",r,t)}if(this.logger.info("Fetch response:",{retryCount:r,maxRetries:this.maxRetries,url:t,status:n?n.status:"unknown"}),r<this.maxRetries&&this.retryOn(n)){const n=await this.__refreshAuthOptions(e);return this.__fetchRetry(t,n,r+1)}if(s||!n)throw new Error(s);return n}async __fetch(t,e){return this.CIAM?this.__fetchRetry(t,e,0):(this.logger.warn("CIAM is not enabled"),null)}}}}]);