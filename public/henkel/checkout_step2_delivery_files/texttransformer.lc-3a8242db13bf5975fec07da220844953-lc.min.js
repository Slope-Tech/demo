"use strict";(self.heliuxModules=self.heliuxModules||[]).push([[6989],{50423:(e,t,n)=>{var s=n(54705),r=n(58480),o=n(55765);const i={definitions:[],escapeElements:["a","img"],attributes:["title","alt"],timeoutToStart:500};function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){(0,s.A)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}class h extends r.ComponentBase{init(){this.config=a(a({},i),this.config),this.chars=this.config.definitions.reduce(((e,t)=>a(a({},e),{[(0,o.Zn)(t)]:this.getCharAndTags(t)})),{}),this.observer=new MutationObserver((e=>this.mutationCallback(e))),this.waitToTransform=(0,r.debounce)((()=>this.transform(this.nodesToCheck)),0),this.nodesToCheck=new Set,setTimeout((()=>{this.observer.observe(document.body,{childList:!0,subtree:!0}),this.escapeElements(document.body)}),this.config.timeoutToStart)}getCharAndTags(e){const t=document.createElement("div");return t.innerHTML=e,{content:e,tagName:t.childNodes[0].tagName}}escapeElements(e){this.config.escapeElements.forEach((t=>{this.config.attributes.forEach((n=>{e.querySelectorAll(`${t}[${n}]`).forEach((e=>{e.setAttribute(n,(0,o.Zn)(e.getAttribute(n)))}))}))}))}mutationCallback(e){e.forEach((e=>{if("childList"===e.type&&e.addedNodes.length>0){const t=this.notReplacedElement(e.addedNodes);t.length>0&&(this.nodesToCheck=new Set([...this.nodesToCheck,...t]),this.waitToTransform(this.nodesToCheck))}}))}notReplacedElement(e){return Array.from(e).filter((e=>!Object.keys(this.chars).reduce(((t,n)=>t||e.tagName===this.chars[n].tagName||e.nodeType===Node.TEXT_NODE),!1)))}hasChars(e){return Object.keys(this.chars).some((t=>e.nodeValue.includes(t)))}findOnlyTextNodesContainingChar(e){let t=[],n=e.firstChild;for(;null!=n;){if(n.nodeType===Node.TEXT_NODE&&this.hasChars(n))t.push(n);else{const e=this.findOnlyTextNodesContainingChar(n);t=[...t,...e]}n=n.nextSibling}return t}transform(e){e.forEach((e=>{this.findOnlyTextNodesContainingChar(e).forEach((e=>{const t=e.parentNode;t&&(t.innerHTML=Object.keys(this.chars).reduce(((e,t)=>e.replaceAll(t,this.chars[t].content)),t.innerHTML))}))})),this.nodesToCheck=new Set}}(0,r.register)({TextTransformer:h},0)}},e=>{e.O(0,[750],(()=>(50423,e(e.s=50423)))),e.O()}]);